
@using Microsoft.AspNetCore.Components

@page "/"

<PageTitle>Home - Orderly</PageTitle>

<div class="pt-20 min-h-screen bg-lightbg dark:bg-darkbg text-lightfg dark:text-darkfg">
    @*
        Hero Banner
    *@

    <section class="fade-in relative bg-lightbg dark:bg-darkbg">
        <div class="max-w-7xl mx-auto px-4 py-24 flex flex-col-reverse lg:flex-row items-center lg:space-x-16">
            <!-- Text -->

            <div class="flex-1 text-center lg:text-left space-y-4">
                <h1 class="text-4xl sm:text-5xl font-bold leading-snug">
                    <span id="typewriter"></span>
                    <span aria-hidden="true" class="typewriter-spacer">
                        <!-- Use longest phrase as a placeholder -->
                        Fast. Reliable. Modern.
                    </span>
                </h1>

                <p class="text-base sm:text-lg text-lightfg dark:text-darkfg/90 max-w-lg mx-auto lg:mx-0">
                    A modern portfolio marketplace for buying products, managing orders and more. Build your personal store with Orderly.
                </p>

                <NavLink href="/dashboard/overview" class="inline-block px-6 py-3 bg-primary text-white font-semibold rounded-lg shadow hover:shadow-md hover:bg-blue-700 transition-all duration-300">
                    Get Started
                </NavLink>
            </div>

            <!-- Image -->

            <div class="flex-1 relative w-full max-w-lg mx-auto mb-12 lg:mb-0">
                <div class="relative overflow-hidden rounded-2xl shadow-2xl">
                    <div class="absolute inset-0 bg-gradient-to-b from-transparent to-black/20 dark:to-black/30 z-10 pointer-events-none rounded-2xl"></div>
                    <img src="images/hero-background.webp" alt="Orderly Hero" class="w-full h-full object-cover rounded-2xl transform transition-transform duration-500 hover:scale-105" />
                </div>
            </div>
        </div>
    </section>

    @*
        Flip Cards
    *@

    <section class="py-16 bg-lightbg dark:bg-darkbg">
        <div class="max-w-6xl mx-auto px-4">
            <h2 class="fade-in text-3xl font-bold text-center mb-12 text-lightfg dark:text-darkfg">
                Features that Impress
            </h2>

            <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
                @foreach (var card in FlipCards)
                {
                    <div class="fade-in perspective w-full h-72 flip-card cursor-pointer select-none">
                        <div class="relative w-full h-full flip-card-inner">
                            <!-- Front -->

                            <div class="absolute w-full h-full backface-hidden bg-lightcard dark:bg-darkcard rounded-xl shadow-lg flex flex-col justify-center items-center p-6 text-center">
                                @((MarkupString)card.Icon)
                                <h3 class="text-xl font-semibold text-lightfg dark:text-darkfg">@card.Title</h3>
                                <p class="mt-2 text-sm text-lightfg/80 dark:text-darkfg/80">@card.Phrase</p>
                            </div>

                            <!-- Back -->

                            <div class="absolute w-full h-full backface-hidden rotate-y-180 bg-lightcard dark:bg-darkcard rounded-xl shadow-lg flex flex-col items-center justify-center p-6 text-center">
                                <p class="text-lightfg/90 dark:text-darkfg/90">@card.Description</p>
                            </div>
                        </div>
                    </div>

                }
            </div>
        </div>
    </section>

    @*
        Showcase Gallery
    *@

    <section class="py-16 bg-lightbg dark:bg-darkbg">
        <div class="max-w-6xl mx-auto px-4 space-y-16">
            <h2 class="fade-in text-3xl font-bold text-center mb-12 text-lightfg dark:text-darkfg">
                Dashboard Showcase
            </h2>

            @foreach (var item in DashboardShowcaseItems)
            {
                <div class="fade-in flex flex-col items-center gap-6">
                    <!-- Text -->

                    <div class="text-center space-y-4 max-w-2xl">
                        <h3 class="text-2xl font-bold text-lightfg dark:text-darkfg">@item.Title</h3>
                        <p class="text-left text-lightfg/90 dark:text-darkfg/90">
                            @item.Description
                        </p>
                    </div>

                    <!-- Image -->

                    <div class="w-full">
                        <img src="@item.Img" alt="@item.Title"
                             class="rounded-xl shadow-xl w-full max-w-3xl mx-auto transform transition-transform duration-500 hover:scale-105" />
                    </div>
                </div>
            }
        </div>
    </section>
</div>

<style>
    <!-- Typewriter -->

    #typewriter {
        display: inline-block;
        vertical-align: baseline;
    }

    .typewriter-spacer {
        visibility: hidden;
        position: absolute;
        white-space: nowrap;
        pointer-events: none;
        user-select: none;
        font-size: inherit;
        font-weight: inherit;
        line-height: inherit;
    }

    <!-- Flip cards -->

    .perspective {
        perspective: 1000px;
    }

    .flip-card-inner {
        width: 100%;
        height: 100%;
        transition: transform 0.7s;
        transform-style: preserve-3d;
    }

    .backface-hidden {
        backface-visibility: hidden;
    }

    .rotate-y-180 {
        transform: rotateY(180deg);
    }

    .flip-card:hover .flip-card-inner {
        transform: rotateY(180deg);
    }
</style>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("initFadeIn");

            await JS.InvokeVoidAsync("startTyped", "#typewriter", new[] {
                "Welcome to <span class='text-primary dark:text-primary'>Orderly</span>.",
                "Fast. Reliable. Modern.",
                "Your portfolio marketplace."
            });
        }
    }

    // ***** Flip Cards ***** //

    public class FlipCard
    {
        public string Title { get; set; } = string.Empty;
        public string Phrase { get; set; } = string.Empty;        // short front text
        public string Description { get; set; } = string.Empty;   // long back text
        public string Icon { get; set; } = string.Empty;
        public bool IsFlipped { get; set; } = false;
    }

    private readonly List<FlipCard> FlipCards = new List<FlipCard>
    {
        new FlipCard
        {
            Title = "Easy Order Management",
            Phrase = "Simplify your workflow",
            Description = "Track, update, and fulfill orders with ease. Our dashboard allows you to manage multiple products and orders efficiently. Notifications and status updates keep you on top of every transaction.",
            Icon = @"<i class='bi bi-journal-check text-primary fs-1 mb-4'></i>"
        },
        new FlipCard
        {
            Title = "Fast & Responsive",
            Phrase = "Lightning fast performance",
            Description = "Experience blazing speed with a frontend built on Blazor WebAssembly and optimized Tailwind CSS. Every action is near-instant, whether browsing orders or editing products. Works beautifully on any device.",
            Icon = @"<i class='bi bi-lightning-charge text-primary fs-1 mb-4'></i>"
        },
        new FlipCard
        {
            Title = "Modern Design",
            Phrase = "Clean and minimal UI",
            Description = "Enjoy a contemporary interface that is both visually appealing and highly functional. Dark and light modes adapt seamlessly. Every element, from cards to galleries, is designed to enhance usability.",
            Icon = @"<i class='bi bi-palette text-primary fs-1 mb-4'></i>"
        }
    };

    // ***** Showcase Gallery ***** //

    public class DashboardShowcaseItem
    {
        public string Img { get; set; } = string.Empty;
        public string Title { get; set; } = string.Empty;
        public string Description { get; set; } = string.Empty;
    }

    private readonly List<DashboardShowcaseItem> DashboardShowcaseItems = new List<DashboardShowcaseItem>
    {
        new DashboardShowcaseItem
        {
            Img = "images/Dashboard Showcases/Analytics.png",
            Title = "Overview Panel",
            Description = "Get a complete snapshot of your orders, sales, and revenue in one central view. Track trends and key metrics effortlessly."
        },
        new DashboardShowcaseItem
        {
            Img = "images/Dashboard Showcases/Product Management.png",
            Title = "Product Management",
            Description = "Add, edit, and manage your products seamlessly. Organize items, set prices, and keep your catalog up to date with ease."
        },
        new DashboardShowcaseItem
        {
            Img = "images/Dashboard Showcases/Order Management.png",
            Title = "Order Management",
            Description = "Process and fulfill customer orders efficiently. Monitor statuses, send notifications, and keep everything organized in real time."
        },
        new DashboardShowcaseItem
        {
            Img = "images/Dashboard Showcases/Chats.png",
            Title = "Customer Insights",
            Description = "Engage with customers and gather insights through integrated chat tools. Understand user behavior to improve your service."
        }
    };

    // ***** Injects ***** //

    [Inject]
    private IJSRuntime JS { get; set; }
}
