
@using Orderly.Shared.Dtos
@using Orderly.Shared.Helpers

@namespace Orderly.Client.Components

<link rel="stylesheet" href="css/modal.css" />

@if (IsVisible && OrderToView is not null)
{
    <div class="fixed inset-0 bg-black/50 flex items-center justify-center z-50">
        <div class="bg-lightcard dark:bg-darkcard rounded-2xl shadow-2xl w-[95%] sm:max-w-lg p-6 relative"
             @onclick:stopPropagation="true">

             @*
                 Header
             *@

            <div class="flex justify-between items-center mb-6">
                <!-- Title -->

                <h3 class="text-2xl font-bold text-primary">Order Details</h3>

                <!-- Close Button -->

                <button class="text-gray-400 hover:text-red-500 transition"
                        @onclick="OnCloseClicked">
                    ✕
                </button>
            </div>

            @*
                Order Info
            *@

            <div class="space-y-3 text-sm text-lightfg dark:text-darkfg">
                <!-- Order ID -->

                <div class="flex justify-between">
                    <span class="font-semibold">Order ID:</span>
                    <span class="text-primary">#@OrderToView.PublicId</span>
                </div>

                <!-- Product Name -->

                <div class="flex justify-between">
                    <span class="font-semibold">Product:</span>
                    <span>@OrderToView.ProductDisplayName</span>
                </div>

                <!-- Customer Name -->

                <div class="flex justify-between">
                    <span class="font-semibold">Customer:</span>
                    <span>@OrderToView.CustomerDisplayName</span>
                </div>

                <!-- Quantity -->

                <div class="flex justify-between">
                    <span class="font-semibold">Quantity:</span>
                    <span>@OrderToView.Quantity</span>
                </div>

                <!-- Price -->

                <div class="flex justify-between">
                    <span class="font-semibold">Price:</span>
                    <span class="text-money">£@OrderToView.Price.ToString("F2")</span>
                </div>

                <!-- Status -->

                <div class="flex justify-between">
                    <span class="font-semibold">Status:</span>
                    <span>@OrderToView.Status</span>
                </div>

                <!-- Notes -->

                <div class="flex justify-between">
                    <span class="font-semibold">Notes:</span>
                    <span class="text-gray-500 dark:text-gray-400">@OrderToView.Notes</span>
                </div>

                <!-- Created At -->

                <div class="flex justify-between">
                    <span class="font-semibold">Created:</span>
                    <span>@DateTimeHelper.ToReadableDateShort(OrderToView.CreatedAt)</span>
                </div>
            </div>

            @*
                Actions
            *@

            <div class="mt-6 flex justify-end">
                <!-- Close Button -->

                <button class="px-4 py-2 rounded-lg bg-primary text-white font-semibold hover:bg-primary/90 transition"
                        @onclick="OnCloseClicked">
                    Close
                </button>
            </div>
        </div>
    </div>
}


@code {
    [Parameter]
    public bool IsVisible { get; set; }

    [Parameter]
    public OrderDto? OrderToView { get; set; }

    [Parameter]
    public EventCallback OnClose { get; set; }

    public async Task OnCloseClicked()
    {
        if (OnClose.HasDelegate)
        {
            await OnClose.InvokeAsync();
        }
    }
}
