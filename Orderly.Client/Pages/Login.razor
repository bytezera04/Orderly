
@using Orderly.Client.Pages.Shared
@using Microsoft.JSInterop
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel.DataAnnotations
@using System.Net.Http.Json
@using Orderly.Client.Services

@page "/login"
@namespace Orderly.Client.Pages
@layout MainLayout

@inject AuthService AuthService
@inject NavigationManager Navigation
@inject IJSRuntime JS

<PageTitle>Login - Orderly</PageTitle>

<div class="min-h-screen pt-24 flex items-center justify-center bg-lightbg dark:bg-darkbg px-4">
    <div class="w-full max-w-md bg-lightcard dark:bg-darkcard rounded-2xl shadow-lg p-6 sm:p-8">
        @*
            Login and Register Tab Selection
        *@

        <div class="w-full mb-6">
            <div class="mx-auto w-full rounded-full border border-lightborder dark:border-darkborder bg-lightbg dark:bg-darkbg p-1 grid grid-cols-2">
                <button class="h-10 rounded-full text-sm font-semibold transition
                 @(IsLogin ? "bg-primary text-white shadow" : "text-lightfg dark:text-darkfg hover:bg-lightborder/50 dark:hover:bg-darkborder/50")"
                        @onclick="() => SetTab(true)">
                    Login
                </button>
                <button class="h-10 rounded-full text-sm font-semibold transition
                 @(!IsLogin ? "bg-primary text-white shadow" : "text-lightfg dark:text-darkfg hover:bg-lightborder/50 dark:hover:bg-darkborder/50")"
                        @onclick="() => SetTab(false)">
                    Register
                </button>
            </div>
        </div>

        <div class="min-h-[460px] flex flex-col justify-between">
            @*
                Login Form
            *@

            <div class="@(IsLogin ? "block" : "hidden")">
                <!-- Messages -->

                @if (!string.IsNullOrEmpty(LoginError))
                {
                    <div class="mb-4 p-3 rounded-lg bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-400">
                        @LoginError
                    </div>
                }

                <!-- Fields -->

                <div class="flex flex-col gap-4">
                    <!-- Email -->

                    <label class="relative block">
                        <span class="sr-only">Email</span>

                        <i class="bi bi-envelope absolute left-3 top-1/2 -translate-y-1/2 text-lightfg/60 dark:text-darkfg/60"></i>

                        <input type="email" placeholder="Email"
                               class="w-full h-12 pl-10 pr-3 rounded-lg border border-lightborder dark:border-darkborder
                                      bg-lightbg dark:bg-darkcard text-lightfg dark:text-darkfg
                                      focus:outline-none focus:ring-2 focus:ring-primary transition"
                               @bind="LoginModel.Email" />
                    </label>

                    <!-- Password -->

                    <label class="relative block">
                        <span class="sr-only">Password</span>

                        <i class="bi bi-lock absolute left-3 top-1/2 -translate-y-1/2 text-lightfg/60 dark:text-darkfg/60"></i>

                        <input type="password" placeholder="Password"
                               class="w-full h-12 pl-10 pr-3 rounded-lg border border-lightborder dark:border-darkborder
                                      bg-lightbg dark:bg-darkcard text-lightfg dark:text-darkfg
                                      focus:outline-none focus:ring-2 focus:ring-primary transition"
                               @bind="LoginModel.Password" />
                    </label>

                    <!-- Submit Button -->

                    <button class="w-full h-12 rounded-lg bg-primary text-white font-semibold hover:bg-primary/90 transition"
                            @onclick="HandleLogin">
                        Sign In
                    </button>
                </div>
            </div>

            @*
                Register Form
            *@

            <div class="@(!IsLogin ? "block" : "hidden")">
                <!-- Messages -->

                @if (!string.IsNullOrEmpty(RegisterError))
                {
                    <div class="mb-4 p-3 rounded-lg bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-400">
                        @RegisterError
                    </div>
                }
                @if (!string.IsNullOrEmpty(RegisterSuccess))
                {
                    <div class="mb-4 p-3 rounded-lg bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-400">
                        @RegisterSuccess
                    </div>
                }

                <!-- Fields -->

                <div class="flex flex-col gap-4">
                    <!-- Full Name -->

                    <label class="relative block">
                        <span class="sr-only">Full Name</span>

                        <i class="bi bi-person absolute left-3 top-1/2 -translate-y-1/2 text-lightfg/60 dark:text-darkfg/60"></i>

                        <input type="text" placeholder="Username"
                               class="w-full h-12 pl-10 pr-3 rounded-lg border border-lightborder dark:border-darkborder
                                      bg-lightbg dark:bg-darkcard text-lightfg dark:text-darkfg
                                      focus:outline-none focus:ring-2 focus:ring-primary transition"
                               @bind="RegisterModel.FullName" />
                    </label>

                    <!-- Email -->

                    <label class="relative block">
                        <span class="sr-only">Email</span>

                        <i class="bi bi-envelope absolute left-3 top-1/2 -translate-y-1/2 text-lightfg/60 dark:text-darkfg/60"></i>

                        <input type="email" placeholder="Email"
                               class="w-full h-12 pl-10 pr-3 rounded-lg border border-lightborder dark:border-darkborder
                                      bg-lightbg dark:bg-darkcard text-lightfg dark:text-darkfg
                                      focus:outline-none focus:ring-2 focus:ring-primary transition"
                               @bind="RegisterModel.Email" />
                    </label>

                    <!-- Password -->

                    <label class="relative block">
                        <span class="sr-only">Password</span
                        <i class="bi bi-lock absolute left-3 top-1/2 -translate-y-1/2 text-lightfg/60 dark:text-darkfg/60"></i>

                        <input type="password" placeholder="Password"
                               class="w-full h-12 pl-10 pr-3 rounded-lg border border-lightborder dark:border-darkborder
                                      bg-lightbg dark:bg-darkcard text-lightfg dark:text-darkfg
                                      focus:outline-none focus:ring-2 focus:ring-primary transition"
                               @bind="RegisterModel.Password" />
                    </label>

                    <!-- Confirm Password -->

                    <label class="relative block">
                        <span class="sr-only">Confirm Password</span>

                        <i class="bi bi-lock-fill absolute left-3 top-1/2 -translate-y-1/2 text-lightfg/60 dark:text-darkfg/60"></i>

                        <input type="password" placeholder="Confirm Password"
                               class="w-full h-12 pl-10 pr-3 rounded-lg border border-lightborder dark:border-darkborder
                                      bg-lightbg dark:bg-darkcard text-lightfg dark:text-darkfg
                                      focus:outline-none focus:ring-2 focus:ring-primary transition"
                               @bind="RegisterModel.ConfirmPassword" />
                    </label>

                    <!-- Submit Button -->

                    <button class="w-full h-12 rounded-lg bg-primary text-white font-semibold hover:bg-primary/90 transition"
                            @onclick="HandleRegister">
                        Register
                    </button>
                </div>
            </div>

        </div>
    </div>
</div>

@code {
    private bool IsLogin = true;

    private LoginModel LoginModel = new();
    private RegisterModel RegisterModel = new();

    private string? LoginError;
    private string? RegisterError;
    private string? RegisterSuccess;

    private void SetTab(bool loginTab)
    {
        IsLogin = loginTab;
        LoginError = null;
        RegisterError = null;
        RegisterSuccess = null;
    }

    private async Task HandleLogin()
    {
        LoginError = null;
        var success = await AuthService.LoginAsync(LoginModel);

        if (success)
        {
            Navigation.NavigateTo("/");
        }
        else
        {
            LoginError = "Invalid login credentials.";
        }
    }

    private async Task HandleRegister()
    {
        RegisterError = null;
        RegisterSuccess = null;

        if (RegisterModel.Password != RegisterModel.ConfirmPassword)
        {
            RegisterError = "Passwords do not match.";
            return;
        }

        var success = await AuthService.RegisterAsync(RegisterModel);

        if (success)
        {
            RegisterSuccess = "Registration successful! You can now sign in.";
            RegisterModel = new();
        }
        else
        {
            RegisterError = "Registration failed. Try again.";
        }
    }
}
